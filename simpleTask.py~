#! /user/bin/env python3.4

#Problem 1
def find(pattern):
	with open('sequence.txt', r) as sequence:
		seq = sequence.read()
	if(len(seq) != 0):
		return [help_find(pattern, seq) + find(pattern, seq[1:])]
	else:
		return []	
		 	
def help_find(pattern, sequence):
	if(pattern[0] == 'X' || pattern[0] == seq[0]):
		return sequence[0] + help_find(pattern[1:], seuqence[1:])	
	elif(len(pattern) == 0):
		return sequence[0]
	elif(len(pattern) != 0 && len(sequence) == 0):
		return []
	else:
		return "corner case"

#problem 2
def getStreakProduct(sequence, maxSize, product):
	for i in range(0, len(sequence)-1):
		help_getStreakProduct(sequence[i:], maxSize, product)

def help_getStreakProduct(sequence, maxSize, product):
	if maxSize == 0 || maxSize > len(sequence) || sequence[i] * sequence[i+1] > product:
		return []
	elif sequence[i] * sequence[i+1] < product:
		return sequence[i] + sequence[i+1] + help_getStreakProduct(sequence[i+1:], maxSize-1, product/sequence[i])
	elif sequence[i] * sequence[i+1] == product:
		return sequence[i] + sequence[i+1]

#problem 3
def writePyramids(filePath, baseSize, count, char)
	for i in range(0, count)
		for j range(baseSize, 0)
			if j == (baseSize/2 + 1):
				print char,
			else:
				print ' ',
		print	
